function CFFormStoreFactory(a,b,c){return{state:{formId:a,allFields:b,listFields:c},setFormId:function(a){this.state.formId=a},setAllFields:function(a){this.state.allFields=a},setListFields:function(a){this.state.listFields=a},getAllFields:function(){return this.state.allFields}}}function CFEntriesStoreFactory(a,b){return{state:{formId:a,entries:b,total:0,totalPages:0,page:0},setEntries:function(a){this.state.entries=a},setTotal:function(a){this.state.total=a},getTotal:function(){return this.state.total},setTotalPages:function(a){this.state.totalPages=a},getTotalPages:function(){return this.state.totalPages},setPage:function(a){this.state.page=a},getPage:function(){return this.state.page},getEntry:function(a){return"object"==typeof this.state.entries[a]&&this.state.entries[a]},getFieldFromEntry:function(a,b){return"object"==typeof a.fields[b]&&a.fields[b]}}}function CFFormEditStore(a){return Object.assign(Object.create(CFObj.prototype),{getFields:function(){return a.fields},getField:function(b){return this.has(a.fields,b)?a.fields[b]:{}},getFieldType:function(a){var b=this.getField(a);return!this.emptyObject(b)&&b.type},addField:function(b,c){return a.fields[b]=this.fieldFactory(b,c),this.getField(b)},updateField:function(b,c,d){var e=this.getField(b);return!(this.emptyObject(e)||!this.fieldKeys.indexOf(c))&&(a.fields[b][c]=d,this.getField(b))},getConditionals:function(){return a.conditional_groups.conditions},getConditional:function(b){return this.has(a.conditional_groups.conditions,b)?a.conditional_groups.conditions[b]:{}},getProcessors:function(){return a.processors},getProcessor:function(b){return this.has(a.processors,b)?a.processors[b]:{}}})}